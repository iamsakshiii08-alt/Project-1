<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FoodExpress - Fast Food Delivery</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
        
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f5f5f5;
        }
        
        .hero-gradient {
            background: linear-gradient(135deg, #ff7e5f 0%, #feb47b 100%);
        }
        
        .food-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        
        .food-card {
            transition: all 0.3s ease;
        }
        
        .category-btn.active {
            background-color: #ff6b6b;
            color: white;
        }
        
        .cart-item {
            animation: fadeIn 0.3s ease-in-out;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateX(-20px); }
            to { opacity: 1; transform: translateX(0); }
        }
        
        .add-to-cart-btn:hover {
            transform: scale(1.05);
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="bg-white shadow-lg">
        <div class="max-w-6xl mx-auto px-4">
            <div class="flex justify-between">
                <div class="flex space-x-7">
                    <a href="#" class="flex items-center py-4 px-2">
                        <span class="font-semibold text-xl text-red-500">FoodExpress</span>
                    </a>
                </div>
                <div class="hidden md:flex items-center space-x-3">
                    <a href="#" class="py-4 px-2 text-gray-500 hover:text-red-500 transition duration-300">Home</a>
                    <a href="#" class="py-4 px-2 text-gray-500 hover:text-red-500 transition duration-300">Menu</a>
                    <a href="#" class="py-4 px-2 text-gray-500 hover:text-red-500 transition duration-300">About Us</a>
                    <a href="#" class="py-4 px-2 text-gray-500 hover:text-red-500 transition duration-300">Contact</a>
                </div>
                <div class="md:hidden flex items-center">
                    <button class="outline-none mobile-menu-button">
                        <svg class="w-6 h-6 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
        <div class="hidden mobile-menu">
            <ul class="">
                <li class="active"><a href="#" class="block text-sm px-2 py-4 hover:bg-red-500 hover:text-white transition duration-300">Home</a></li>
                <li><a href="#" class="block text-sm px-2 py-4 hover:bg-red-500 hover:text-white transition duration-300">Menu</a></li>
                <li><a href="#" class="block text-sm px-2 py-4 hover:bg-red-500 hover:text-white transition duration-300">About Us</a></li>
                <li><a href="#" class="block text-sm px-2 py-4 hover:bg-red-500 hover:text-white transition duration-300">Contact</a></li>
            </ul>
        </div>
    </nav>

    <!-- Hero Section -->
    <div class="hero-gradient text-white py-20">
        <div class="container mx-auto px-6">
            <div class="flex flex-col md:flex-row justify-between items-center">
                <div class="md:w-1/2 mb-10 md:mb-0">
                    <h1 class="text-4xl font-bold mb-4">Delicious Food Delivered to Your Doorstep</h1>
                    <p class="text-xl mb-6">Order from your favorite restaurants with just a few clicks and enjoy fast delivery.</p>
                    <button class="bg-white text-red-500 font-bold py-2 px-6 rounded-full hover:bg-gray-100 transition duration-300 focus:outline-none focus:shadow-outline">
                        Order Now
                    </button>
                </div>
                <div class="md:w-1/2 flex justify-center">
                    <img src="https://placehold.co/600x400" alt="Happy chef preparing food in modern kitchen with various fresh ingredients" class="rounded-lg shadow-xl max-w-full h-auto" />
                </div>
            </div>
        </div>
    </div>

    <!-- Food Categories -->
    <div class="container mx-auto px-6 py-12">
        <h2 class="text-3xl font-bold text-center mb-8">Our Menu Categories</h2>
        <div class="flex flex-wrap justify-center gap-4 mb-12">
            <button class="category-btn px-4 py-2 bg-gray-200 rounded-full hover:bg-red-500 hover:text-white transition duration-300 active" data-category="all">All</button>
            <button class="category-btn px-4 py-2 bg-gray-200 rounded-full hover:bg-red-500 hover:text-white transition duration-300" data-category="pizza">Pizza</button>
            <button class="category-btn px-4 py-2 bg-gray-200 rounded-full hover:bg-red-500 hover:text-white transition duration-300" data-category="burger">Burgers</button>
            <button class="category-btn px-4 py-2 bg-gray-200 rounded-full hover:bg-red-500 hover:text-white transition duration-300" data-category="pasta">Pasta</button>
            <button class="category-btn px-4 py-2 bg-gray-200 rounded-full hover:bg-red-500 hover:text-white transition duration-300" data-category="salad">Salads</button>
            <button class="category-btn px-4 py-2 bg-gray-200 rounded-full hover:bg-red-500 hover:text-white transition duration-300" data-category="dessert">Desserts</button>
        </div>

        <!-- Food Items Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="food-items">
            <!-- Food items will be populated by JavaScript -->
        </div>
    </div>

    <!-- Cart Sidebar -->
    <div class="fixed right-0 top-0 h-full w-80 bg-white shadow-lg transform transition-transform duration-300 translate-x-full z-50" id="cart-sidebar">
        <div class="p-6 h-full flex flex-col">
            <div class="flex justify-between items-center mb-6">
                <h3 class="text-xl font-bold">Your Order</h3>
                <button id="close-cart" class="text-gray-500 hover:text-red-500">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            
            <div class="flex-grow overflow-y-auto" id="cart-items">
                <!-- Cart items will be populated here -->
                <div class="text-center py-10">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                    </svg>
                    <p class="mt-4 text-gray-500">Your cart is empty</p>
                </div>
            </div>
            
            <div class="border-t pt-4">
                <div class="flex justify-between mb-2">
                    <span class="font-medium">Subtotal:</span>
                    <span id="cart-subtotal">$0.00</span>
                </div>
                <button id="checkout-btn" class="w-full bg-red-500 text-white py-3 rounded-lg hover:bg-red-600 transition duration-300">Proceed to Checkout</button>
            </div>
        </div>
    </div>

    <!-- Cart Button Floating -->
    <div class="fixed bottom-8 right-8 z-40">
        <button id="cart-btn" class="bg-red-500 text-white p-4 rounded-full shadow-lg hover:bg-red-600 transition duration-300 flex items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
            </svg>
            <span class="bg-white text-red-500 rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold ml-1" id="cart-count">0</span>
        </button>
    </div>

    <!-- Footer -->
    <footer class="bg-gray-800 text-white py-12">
        <div class="container mx-auto px-6">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
                <div>
                    <h3 class="text-xl font-bold mb-4">FoodExpress</h3>
                    <p class="text-gray-400">Delivering happiness with every order since 2023.</p>
                </div>
                <div>
                    <h4 class="font-bold mb-4">Quick Links</h4>
                    <ul class="space-y-2">
                        <li><a href="#" class="text-gray-400 hover:text-white transition duration-300">Home</a></li>
                        <li><a href="#" class="text-gray-400 hover:text-white transition duration-300">Menu</a></li>
                        <li><a href="#" class="text-gray-400 hover:text-white transition duration-300">About Us</a></li>
                        <li><a href="#" class="text-gray-400 hover:text-white transition duration-300">Contact</a></li>
                    </ul>
                </div>
                <div>
                    <h4 class="font-bold mb-4">Contact Us</h4>
                    <ul class="text-gray-400 space-y-2">
                        <li>123 Food Street, Foodville</li>
                        <li>hello@foodexpress.com</li>
                        <li>+1 (234) 567-8910</li>
                    </ul>
                </div>
                <div>
                    <h4 class="font-bold mb-4">Follow Us</h4>
                    <div class="flex space-x-4">
                        <a href="#" class="text-gray-400 hover:text-white transition duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"/>
                            </svg>
                        </a>
                        <a href="#" class="text-gray-400 hover:text-white transition duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z"/>
                            </svg>
                        </a>
                        <a href="#" class="text-gray-400 hover:text-white transition duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M22.675 0h-21.35c-.732 0-1.325.593-1.325 1.325v21.351c0 .731.593 1.324 1.325 1.324h11.495v-9.294h-3.128v-3.622h3.128v-2.671c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.795.715-1.795 1.763v2.313h3.587l-.467 3.622h-3.12v9.293h6.116c.73 0 1.323-.593 1.323-1.325v-21.35c0-.732-.593-1.325-1.325-1.325z"/>
                            </svg>
                        </a>
                        <a href="#" class="text-gray-400 hover:text-white transition duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
            <div class="border-t border-gray-700 mt-8 pt-8 text-center text-gray-400">
                <p>© 2023 FoodExpress. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script>
        // Food Menu Data
        const foodItems = [
            {
                id: 1,
                name: "Margherita Pizza",
                description: "Classic pizza with tomato sauce, mozzarella, and basil",
                price: 12.99,
                category: "pizza",
                image: "https://placehold.co/600x400/e3e3e3/757575?text=Margherita+Pizza"
            },
            {
                id: 2,
                name: "Pepperoni Pizza",
                description: "Traditional pizza with pepperoni and mozzarella",
                price: 14.99,
                category: "pizza",
                image: "https://placehold.co/600x400/e3e3e3/757575?text=Pepperoni+Pizza"
            },
            {
                id: 3,
                name: "Cheeseburger",
                description: "Juicy beef patty with cheese, lettuce, and special sauce",
                price: 8.99,
                category: "burger",
                image: "https://placehold.co/600x400/e3e3e3/757575?text=Cheeseburger"
            },
            {
                id: 4,
                name: "Bacon Burger",
                description: "Beef burger with crispy bacon and cheddar cheese",
                price: 10.99,
                category: "burger",
                image: "https://placehold.co/600x400/e3e3e3/757575?text=Bacon+Burger"
            },
            {
                id: 5,
                name: "Spaghetti Carbonara",
                description: "Classic pasta with egg, cheese, pancetta, and black pepper",
                price: 11.99,
                category: "pasta",
                image: "https://placehold.co/600x400/e3e3e3/757575?text=Carbonara"
            },
            {
                id: 6,
                name: "Fettuccine Alfredo",
                description: "Creamy pasta with parmesan cheese and butter",
                price: 10.99,
                category: "pasta",
                image: "https://placehold.co/600x400/e3e3e3/757575?text=Alfredo+Pasta"
            },
            {
                id: 7,
                name: "Caesar Salad",
                description: "Fresh romaine lettuce with croutons and Caesar dressing",
                price: 7.99,
                category: "salad",
                image: "https://placehold.co/600x400/e3e3e3/757575?text=Caesar+Salad"
            },
            {
                id: 8,
                name: "Greek Salad",
                description: "Cucumber, tomatoes, olives, and feta cheese",
                price: 8.49,
                category: "salad",
                image: "https://placehold.co/600x400/e3e3e3/757575?text=Greek+Salad"
            },
            {
                id: 9,
                name: "Chocolate Cake",
                description: "Rich chocolate cake with dark chocolate frosting",
                price: 6.99,
                category: "dessert",
                image: "https://placehold.co/600x400/e3e3e3/757575?text=Chocolate+Cake"
            },
            {
                id: 10,
                name: "Tiramisu",
                description: "Classic Italian dessert with coffee-soaked ladyfingers",
                price: 7.49,
                category: "dessert",
                image: "https://placehold.co/600x400/e3e3e3/757575?text=Tiramisu"
            }
        ];

        // DOM Elements
        const foodItemsContainer = document.getElementById('food-items');
        const categoryButtons = document.querySelectorAll('.category-btn');
        const cartSidebar = document.getElementById('cart-sidebar');
        const cartBtn = document.getElementById('cart-btn');
        const closeCartBtn = document.getElementById('close-cart');
        const cartItemsContainer = document.getElementById('cart-items');
        const cartSubtotal = document.getElementById('cart-subtotal');
        const cartCount = document.getElementById('cart-count');
        const checkoutBtn = document.getElementById('checkout-btn');

        // Cart State
        let cart = [];

        // Mobile Menu Toggle
        const mobileMenuButton = document.querySelector('.mobile-menu-button');
        const mobileMenu = document.querySelector('.mobile-menu');

        mobileMenuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
        });

        // Initialize the page with all food items
        function renderFoodItems(category = 'all') {
            foodItemsContainer.innerHTML = '';
            
            const filteredItems = category === 'all' 
                ? foodItems 
                : foodItems.filter(item => item.category === category);
            
            filteredItems.forEach(item => {
                const foodCard = document.createElement('div');
                foodCard.className = 'food-card bg-white rounded-lg overflow-hidden shadow-md';
                
                foodCard.innerHTML = `
                    <div class="relative">
                        <img src="${item.image}" alt="${item.name}" class="w-full h-48 object-cover" />
                        <span class="absolute top-4 right-4 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-bold">$${item.price.toFixed(2)}</span>
                    </div>
                    <div class="p-4">
                        <h3 class="text-xl font-bold mb-2">${item.name}</h3>
                        <p class="text-gray-600 mb-4">${item.description}</p>
                        <button class="add-to-cart-btn w-full bg-red-500 text-white py-2 rounded-lg hover:bg-red-600 transition duration-300" data-id="${item.id}">
                            Add to Cart
                        </button>
                    </div>
                `;
                
                foodItemsContainer.appendChild(foodCard);
            });
            
            // Add event listeners to new add to cart buttons
            document.querySelectorAll('.add-to-cart-btn').forEach(button => {
                button.addEventListener('click', addToCart);
            });
        }

        // Filter food items by category
        categoryButtons.forEach(button => {
            button.addEventListener('click', () => {
                // Remove active class from all buttons
                categoryButtons.forEach(btn => btn.classList.remove('active'));
                // Add active class to clicked button
                button.classList.add('active');
                
                const category = button.dataset.category;
                renderFoodItems(category);
            });
        });

        // Toggle cart sidebar
        cartBtn.addEventListener('click', () => {
            cartSidebar.classList.remove('translate-x-full');
            renderCartItems();
        });

        closeCartBtn.addEventListener('click', () => {
            cartSidebar.classList.add('translate-x-full');
        });

        // Add item to cart
        function addToCart(e) {
            const itemId = parseInt(e.target.dataset.id);
            const item = foodItems.find(food => food.id === itemId);
            
            // Check if item already in cart
            const existingItem = cart.find(item => item.id === itemId);
            
            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                cart.push({
                    ...item,
                    quantity: 1
                });
            }
            
            updateCartCount();
            renderCartItems();
            
            // Show cart sidebar when adding first item
            if (cart.length === 1) {
                cartSidebar.classList.remove('translate-x-full');
            }
            
            // Animation feedback
            e.target.textContent = 'Added!';
            e.target.classList.add('bg-green-500');
            setTimeout(() => {
                e.target.textContent = 'Add to Cart';
                e.target.classList.remove('bg-green-500');
            }, 1000);
        }

        // Update cart count display
        function updateCartCount() {
            const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
            cartCount.textContent = totalItems;
        }

        // Render cart items
        function renderCartItems() {
            if (cart.length === 0) {
                cartItemsContainer.innerHTML = `
                    <div class="text-center py-10">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                        </svg>
                        <p class="mt-4 text-gray-500">Your cart is empty</p>
                    </div>
                `;
                cartSubtotal.textContent = '$0.00';
                return;
            }
            
            cartItemsContainer.innerHTML = '';
            
            cart.forEach(item => {
                const cartItem = document.createElement('div');
                cartItem.className = 'cart-item flex justify-between items-center mb-4 pb-4 border-b';
                
                cartItem.innerHTML = `
                    <div class="flex items-center">
                        <img src="${item.image}" alt="${item.name}" class="w-16 h-16 object-cover rounded-lg mr-4" />
                        <div>
                            <h4 class="font-medium">${item.name}</h4>
                            <p class="text-sm text-gray-500">$${item.price.toFixed(2)} x ${item.quantity}</p>
                        </div>
                    </div>
                    <div class="flex items-center">
                        <button class="decrease-quantity text-gray-500 hover:text-red-500 mr-2" data-id="${item.id}">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                            </svg>
                        </button>
                        <span class="quantity">${item.quantity}</span>
                        <button class="increase-quantity text-gray-500 hover:text-red-500 ml-2" data-id="${item.id}">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                            </svg>
                        </button>
                        <button class="remove-item text-gray-500 hover:text-red-500 ml-4" data-id="${item.id}">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                            </svg>
                        </button>
                    </div>
                `;
                
                cartItemsContainer.appendChild(cartItem);
            });
            
            // Update subtotal
            const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            cartSubtotal.textContent = `$${subtotal.toFixed(2)}`;
            
            // Add event listeners to quantity buttons
            document.querySelectorAll('.increase-quantity').forEach(button => {
                button.addEventListener('click', increaseQuantity);
            });
            
            document.querySelectorAll('.decrease-quantity').forEach(button => {
                button.addEventListener('click', decreaseQuantity);
            });
            
            document.querySelectorAll('.remove-item').forEach(button => {
                button.addEventListener('click', removeItem);
            });
        }

        // Increase item quantity
        function increaseQuantity(e) {
            const itemId = parseInt(e.target.closest('button').dataset.id);
            const item = cart.find(item => item.id === itemId);
            
            if (item) {
                item.quantity += 1;
                updateCartCount();
                renderCartItems();
            }
        }

        // Decrease item quantity
        function decreaseQuantity(e) {
            const itemId = parseInt(e.target.closest('button').dataset.id);
            const item = cart.find(item => item.id === itemId);
            
            if (item) {
                if (item.quantity > 1) {
                    item.quantity -= 1;
                } else {
                    // Remove if quantity reaches 0
                    cart = cart.filter(cartItem => cartItem.id !== itemId);
                }
                
                updateCartCount();
                renderCartItems();
            }
        }

        // Remove item from cart
        function removeItem(e) {
            const itemId = parseInt(e.target.closest('button').dataset.id);
            cart = cart.filter(item => item.id !== itemId);
            
            updateCartCount();
            renderCartItems();
        }

        // Checkout functionality
        checkoutBtn.addEventListener('click', () => {
            if (cart.length === 0) {
                alert('Your cart is empty. Please add some items before checkout.');
                return;
            }
            
            // Create a receipt
            let receipt = '==== FOODEXPRESS ORDER RECEIPT ====\n\n';
            receipt += 'Thank you for your order!\n\n';
            receipt += 'Your items:\n';
            
            cart.forEach(item => {
                receipt += `${item.name} x ${item.quantity} - $${(item.price * item.quantity).toFixed(2)}\n`;
            });
            
            const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            const tax = subtotal * 0.1; // Assuming 10% tax
            const total = subtotal + tax;
            
            receipt += '\n';
            receipt += `Subtotal: $${subtotal.toFixed(2)}\n`;
            receipt += `Tax (10%): $${tax.toFixed(2)}\n`;
            receipt += `Total: $${total.toFixed(2)}\n\n`;
            receipt += 'Estimated delivery time: 30-45 minutes\n';
            receipt += 'Your food is being prepared now!\n';
            
            alert(receipt);
            
            // Clear cart after checkout
            cart = [];
            updateCartCount();
            renderCartItems();
            cartSidebar.classList.add('translate-x-full');
        });

        // Initialize the page
        renderFoodItems();
    </script>
</body>
</html>




https://www.blackbox.ai/share/34e2da2e-82ea-4cd4-8646-4567bd777964?fullScreen=true